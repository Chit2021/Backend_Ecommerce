/products:
    get:
      summary: Get all products
      description: Returns a list of all products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              example:
                products:
                  - _id: "123"
                    name: "Product 1"
                    description: "Description 1"
                    price: 19.99
                    image: "image-url-1"
                    categoryId: "category-id-1"

    post:
      summary: Create a new product
      description: Creates a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              example:
                product:
                  _id: "123"
                  name: "Product 1"
                  description: "Description 1"
                  price: 19.99
                  image: "image-url-1"
                  categoryId: "category-id-1"

  /products/{productId}:
    get:
      summary: Get a product by ID
      description: Returns a single product based on the provided ID
      parameters:
        - name: productId
          in: path
          description: ID of the product to retrieve data
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              example:
                product:
                  _id: "123"
                  name: "Product 1"
                  description: "Description 1"
                  price: 19.99
                  image: "image-url-1"
                  categoryId: "category-id-1"
        '404':
          description: Product not found

    put:
      summary: Update a product by ID
      description: Updates an existing product with the provided data
      parameters:
        - name: productId
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              example:
                product:
                  _id: "123"
                  name: "Product 1"
                  description: "Description 1"
                  price: 19.99
                  image: "image-url-1"
                  categoryId: "category-id-1"
        '404':
          description: Product not found

    delete:
      summary: Delete a product by ID
      description: Deletes a product based on the provided ID
      parameters:
        - name: productId
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found
          
          